{"version":3,"file":"jayantwaldia-weather.js","sources":["ng://@jayantwaldia/weather/lib/weather.service.ts","ng://@jayantwaldia/weather/lib/weather.component.ts","ng://@jayantwaldia/weather/lib/weather.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n  public apiURL = 'https://api.openweathermap.org/data/2.5/weather?q=';\r\n  public timeApiURL = 'http://api.geonames.org/timezoneJSON?formatted=true&';\r\n  public userdetails = '&username=kalyan11021980&style=full'\r\n  // lat=22.57&lng=88.35\r\n  public appID = '&appid=dc9b03f27b6d1b3ef9e1e36680b989ed';\r\n  constructor(\r\n    private _http: HttpClient\r\n  ) {\r\n\r\n   }\r\n\r\n  getWeather(city, unit): Observable<any> {\r\n     return this._http.get<any>(this.apiURL+city+this.appID+'&units='+unit).pipe(catchError(this.handlError));\r\n  }\r\n  getLocalTime(lat, long): Observable<any> {\r\n     return this._http.get<any>(this.timeApiURL+'lat='+lat+'&lng='+long+this.userdetails);\r\n  }\r\n  handlError(error) {\r\n    return throwError(error.error.message);\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, ViewEncapsulation, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport {WeatherService } from './weather.service';\r\n\r\n@Component({\r\n  selector: 'app-weather',\r\n  templateUrl: './weather.component.html',\r\n  styleUrls: ['./weather.component.scss'],\r\n  encapsulation: ViewEncapsulation.ShadowDom\r\n})\r\nexport class WeatherComponent implements OnChanges {\r\n  @Input('location') location:string;\r\n  @Input('unit') unit:string;\r\n  public errText: string = '';\r\n  public weathersubscription;\r\n  public temp:number;\r\n  public desc: string;\r\n  public weatherico: string;\r\n  public country: string;\r\n  public city: string;\r\n  public dt: Date;\r\n  constructor(\r\n    public _ws: WeatherService\r\n  ) { }\r\n\r\n  renderWeather() {\r\n    this.weathersubscription = this._ws.getWeather(this.location, this.unit).subscribe((data) => {\r\n      this.errText = '';\r\n      this.temp = Math.round(data.main.temp);\r\n      this.desc = data.weather[0].description;\r\n      this.weatherico = 'http://openweathermap.org/img/w/'+data.weather[0].icon+'.png';\r\n      this.city = data.name;\r\n      this.country = data.sys.country;\r\n      this.getLocalTime(data.coord.lat, data.coord.lon);\r\n\r\n    }, error => {\r\n      this.errText = error;\r\n    })\r\n  }\r\n\r\n  getLocalTime(lat, long) {\r\n    this._ws.getLocalTime(lat, long).subscribe((data) => {\r\n      this.dt = data.time;\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if(changes['location'] || changes['unit']){\r\n      if(this.weathersubscription) {\r\n        this.weathersubscription.unsubscribe();\r\n      }\r\n      this.renderWeather();\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { WeatherComponent } from './weather.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common'\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [WeatherComponent],\n  imports: [\n    HttpClientModule,\n    CommonModule\n\n  ],\n  exports: [WeatherComponent]\n})\nexport class WeatherModule { }\n"],"names":[],"mappings":"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"}