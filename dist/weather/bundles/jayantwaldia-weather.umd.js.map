{"version":3,"file":"jayantwaldia-weather.umd.js","sources":["ng://@jayantwaldia/weather/lib/weather.service.ts","ng://@jayantwaldia/weather/lib/weather.component.ts","ng://@jayantwaldia/weather/lib/weather.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n  public apiURL = 'https://api.openweathermap.org/data/2.5/weather?q=';\r\n  public timeApiURL = 'http://api.geonames.org/timezoneJSON?formatted=true&';\r\n  public userdetails = '&username=kalyan11021980&style=full'\r\n  // lat=22.57&lng=88.35\r\n  public appID = '&appid=dc9b03f27b6d1b3ef9e1e36680b989ed';\r\n  constructor(\r\n    private _http: HttpClient\r\n  ) {\r\n\r\n   }\r\n\r\n  getWeather(city, unit): Observable<any> {\r\n     return this._http.get<any>(this.apiURL+city+this.appID+'&units='+unit).pipe(catchError(this.handlError));\r\n  }\r\n  getLocalTime(lat, long): Observable<any> {\r\n     return this._http.get<any>(this.timeApiURL+'lat='+lat+'&lng='+long+this.userdetails);\r\n  }\r\n  handlError(error) {\r\n    return throwError(error.error.message);\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, ViewEncapsulation, SimpleChange, SimpleChanges } from '@angular/core';\r\nimport {WeatherService } from './weather.service';\r\n\r\n@Component({\r\n  selector: 'app-weather',\r\n  templateUrl: './weather.component.html',\r\n  styleUrls: ['./weather.component.scss'],\r\n  encapsulation: ViewEncapsulation.ShadowDom\r\n})\r\nexport class WeatherComponent implements OnChanges {\r\n  @Input('location') location:string;\r\n  @Input('unit') unit:string;\r\n  public errText: string = '';\r\n  public weathersubscription;\r\n  public temp:number;\r\n  public desc: string;\r\n  public weatherico: string;\r\n  public country: string;\r\n  public city: string;\r\n  public dt: Date;\r\n  constructor(\r\n    public _ws: WeatherService\r\n  ) { }\r\n\r\n  renderWeather() {\r\n    this.weathersubscription = this._ws.getWeather(this.location, this.unit).subscribe((data) => {\r\n      this.errText = '';\r\n      this.temp = Math.round(data.main.temp);\r\n      this.desc = data.weather[0].description;\r\n      this.weatherico = 'http://openweathermap.org/img/w/'+data.weather[0].icon+'.png';\r\n      this.city = data.name;\r\n      this.country = data.sys.country;\r\n      this.getLocalTime(data.coord.lat, data.coord.lon);\r\n\r\n    }, error => {\r\n      this.errText = error;\r\n    })\r\n  }\r\n\r\n  getLocalTime(lat, long) {\r\n    this._ws.getLocalTime(lat, long).subscribe((data) => {\r\n      this.dt = data.time;\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if(changes['location'] || changes['unit']){\r\n      if(this.weathersubscription) {\r\n        this.weathersubscription.unsubscribe();\r\n      }\r\n      this.renderWeather();\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { WeatherComponent } from './weather.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common'\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [WeatherComponent],\n  imports: [\n    HttpClientModule,\n    CommonModule\n\n  ],\n  exports: [WeatherComponent]\n})\nexport class WeatherModule { }\n"],"names":["catchError","throwError","Injectable","HttpClient","Component","ViewEncapsulation","Input","NgModule","HttpClientModule","CommonModule"],"mappings":"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"}